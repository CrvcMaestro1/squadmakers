openapi: 3.0.3
info:
  title: Squadmakers API
  version: 1.0.0
  description: Endpoints
servers:
  - url: http://127.0.0.1:8000/api
    description: URL
tags:
- name: "joke"
  description: "Get Jokes from APIs"
- name: "crud_joke"
  description: "Get, Post, Put, Delete Joke"
- name: "mathematical"
  description: "Mathematical"
paths:
  /api/get-joke:
    get:
      operationId: api_get_joke_retrieve
      description: ''
      tags:
      - joke
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/get-joke/{joke_type}:
    get:
      operationId: api_get_joke_retrieve_2
      description: ''
      parameters:
      - in: path
        name: joke_type
        schema:
          type: string
        required: true
      tags:
      - joke
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/joke:
    get:
      operationId: api_joke_retrieve
      description: ''
      tags:
      - crud_joke
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
          description: ''
    post:
      operationId: api_joke_create
      description: ''
      tags:
      - crud_joke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Joke'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Joke'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Joke'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
          description: ''
  /api/joke/{id}:
    get:
      operationId: api_joke_retrieve_2
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - crud_joke
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
          description: ''
    put:
      operationId: api_joke_update_2
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - crud_joke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Joke'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Joke'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Joke'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joke'
          description: ''
    delete:
      operationId: api_joke_destroy_2
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - crud_joke
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/mcm:
    get:
      operationId: api_mcm_retrieve
      description: ''
      parameters:
        - name: "numbers"
          in: "query"
          description: "Number separated by comma"
          required: true
          schema:
            type: "string"
          examples:
            example-numbers:
              value: "1,2,3,4"
      tags:
      - mathematical
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/plusone:
    get:
      operationId: api_plusone_retrieve
      description: ''
      parameters:
        - name: "number"
          in: "query"
          description: "Number"
          required: true
          schema:
            type: "string"
          examples:
            example-number:
              value: "20"
      tags:
      - mathematical
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Joke:
      type: object
      properties:
        text:
          type: string
          maxLength: 256
      required:
      - text
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
